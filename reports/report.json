{"created": 1748019754.498341, "duration": 14.487499952316284, "exitcode": 0, "root": "/Users/hui/keeper_security/reqres-api-tests/tests", "environment": {"Python": "3.7.4", "Platform": "Darwin-24.5.0-x86_64-i386-64bit", "Packages": {"pytest": "4.6.5", "py": "1.8.0", "pluggy": "0.12.0"}, "Plugins": {"xdist": "1.29.0", "forked": "1.0.2", "json-report": "1.5.0", "base-url": "1.4.1", "variables": "1.7.1", "html": "1.22.0", "selenium": "1.17.0", "metadata": "1.8.0", "needle": "0.3.11"}, "Base URL": "", "Driver": null, "Capabilities": {}}, "summary": {"passed": 28, "total": 28, "collected": 28}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "test_user_create.py", "type": "Module"}, {"nodeid": "test_user_delete.py", "type": "Module"}, {"nodeid": "test_user_get.py", "type": "Module"}, {"nodeid": "test_user_update.py", "type": "Module"}]}, {"nodeid": "test_user_create.py::TestCreateUser", "outcome": "passed", "result": [{"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data0]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data1]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data2]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data3]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data4]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data5]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data6]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data7]", "type": "Function", "lineno": 8}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user_empty_data", "type": "Function", "lineno": 37}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user_missing_job", "type": "Function", "lineno": 59}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user_extra_field", "type": "Function", "lineno": 69}]}, {"nodeid": "test_user_create.py::TestCreateUser", "outcome": "passed", "result": [{"nodeid": "test_user_create.py::TestCreateUser", "type": "Instance"}]}, {"nodeid": "test_user_create.py", "outcome": "passed", "result": [{"nodeid": "test_user_create.py::TestCreateUser", "type": "Class"}]}, {"nodeid": "test_user_delete.py::TestDeleteUser", "outcome": "passed", "result": [{"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user[1]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user[2]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user[3]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_nonexistent_user", "type": "Function", "lineno": 19}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user_twice", "type": "Function", "lineno": 25}]}, {"nodeid": "test_user_delete.py::TestDeleteUser", "outcome": "passed", "result": [{"nodeid": "test_user_delete.py::TestDeleteUser", "type": "Instance"}]}, {"nodeid": "test_user_delete.py", "outcome": "passed", "result": [{"nodeid": "test_user_delete.py::TestDeleteUser", "type": "Class"}]}, {"nodeid": "test_user_get.py::TestGetUser", "outcome": "passed", "result": [{"nodeid": "test_user_get.py::TestGetUser::test_get_users[1]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users[2]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users_not_exist_page[3]", "type": "Function", "lineno": 23}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users_not_exist_page[100]", "type": "Function", "lineno": 23}, {"nodeid": "test_user_get.py::TestGetUser::test_get_single_user[1]", "type": "Function", "lineno": 31}, {"nodeid": "test_user_get.py::TestGetUser::test_get_single_user[2]", "type": "Function", "lineno": 31}, {"nodeid": "test_user_get.py::TestGetUser::test_get_single_user[3]", "type": "Function", "lineno": 31}, {"nodeid": "test_user_get.py::TestGetUser::test_get_user_not_found", "type": "Function", "lineno": 50}]}, {"nodeid": "test_user_get.py::TestGetUser", "outcome": "passed", "result": [{"nodeid": "test_user_get.py::TestGetUser", "type": "Instance"}]}, {"nodeid": "test_user_get.py", "outcome": "passed", "result": [{"nodeid": "test_user_get.py::TestGetUser", "type": "Class"}]}, {"nodeid": "test_user_update.py::TestUpdateUser", "outcome": "passed", "result": [{"nodeid": "test_user_update.py::TestUpdateUser::test_update_user[data0]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_user[data1]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_user[data2]", "type": "Function", "lineno": 7}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_nonexistent_user", "type": "Function", "lineno": 29}]}, {"nodeid": "test_user_update.py::TestUpdateUser", "outcome": "passed", "result": [{"nodeid": "test_user_update.py::TestUpdateUser", "type": "Instance"}]}, {"nodeid": "test_user_update.py", "outcome": "passed", "result": [{"nodeid": "test_user_update.py::TestUpdateUser", "type": "Class"}]}], "tests": [{"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data0]", "lineno": 8, "outcome": "passed", "keywords": ["data0", "pytestmark", "TestCreateUser", "parametrize", "tests", "()", "test_user_create.py", "test_create_user[data0]"], "setup": {"duration": 0.0007841587066650391, "outcome": "passed"}, "call": {"duration": 0.42914891242980957, "outcome": "passed", "stdout": "2025-05-23 10:02:20,149 - test_user_create - INFO - Creating user with data: {'name': 'Joe Smith', 'job': 'Engineer'}\n2025-05-23 10:02:20,577 - test_user_create - DEBUG - Response time: 0.43s\n2025-05-23 10:02:20,577 - test_user_create - DEBUG - Response JSON: {'name': 'Joe Smith', 'job': 'Engineer', 'id': '825', 'createdAt': '2025-05-23T17:02:20.527Z'}\n"}, "teardown": {"duration": 0.0002853870391845703, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data1]", "lineno": 8, "outcome": "passed", "keywords": ["test_create_user[data1]", "pytestmark", "data1", "TestCreateUser", "parametrize", "tests", "()", "test_user_create.py"], "setup": {"duration": 0.0005071163177490234, "outcome": "passed"}, "call": {"duration": 0.43533897399902344, "outcome": "passed", "stdout": "2025-05-23 10:02:20,580 - test_user_create - INFO - Creating user with data: {'name': 'Jane Woo', 'job': 'Manager'}\n2025-05-23 10:02:21,015 - test_user_create - DEBUG - Response time: 0.43s\n2025-05-23 10:02:21,015 - test_user_create - DEBUG - Response JSON: {'name': 'Jane Woo', 'job': 'Manager', 'id': '478', 'createdAt': '2025-05-23T17:02:20.959Z'}\n"}, "teardown": {"duration": 0.00036406517028808594, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data2]", "lineno": 8, "outcome": "passed", "keywords": ["data2", "pytestmark", "TestCreateUser", "test_create_user[data2]", "parametrize", "tests", "()", "test_user_create.py"], "setup": {"duration": 0.0005700588226318359, "outcome": "passed"}, "call": {"duration": 0.4285268783569336, "outcome": "passed", "stdout": "2025-05-23 10:02:21,019 - test_user_create - INFO - Creating user with data: {'name': 'Alice Wonderland', 'job': 'Developer'}\n2025-05-23 10:02:21,447 - test_user_create - DEBUG - Response time: 0.43s\n2025-05-23 10:02:21,447 - test_user_create - DEBUG - Response JSON: {'name': 'Alice Wonderland', 'job': 'Developer', 'id': '153', 'createdAt': '2025-05-23T17:02:21.396Z'}\n"}, "teardown": {"duration": 0.00034308433532714844, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data3]", "lineno": 8, "outcome": "passed", "keywords": ["pytestmark", "TestCreateUser", "parametrize", "tests", "()", "test_user_create.py", "test_create_user[data3]", "data3"], "setup": {"duration": 0.0005691051483154297, "outcome": "passed"}, "call": {"duration": 0.4598708152770996, "outcome": "passed", "stdout": "2025-05-23 10:02:21,450 - test_user_create - INFO - Creating user with data: {'name': 'Kevin Creative', 'job': 'Designer'}\n2025-05-23 10:02:21,910 - test_user_create - DEBUG - Response time: 0.46s\n2025-05-23 10:02:21,910 - test_user_create - DEBUG - Response JSON: {'name': 'Kevin Creative', 'job': 'Designer', 'id': '617', 'createdAt': '2025-05-23T17:02:21.856Z'}\n"}, "teardown": {"duration": 0.0003571510314941406, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data4]", "lineno": 8, "outcome": "passed", "keywords": ["test_create_user[data4]", "pytestmark", "TestCreateUser", "parametrize", "tests", "()", "test_user_create.py", "data4"], "setup": {"duration": 0.0005671977996826172, "outcome": "passed"}, "call": {"duration": 0.39435410499572754, "outcome": "passed", "stdout": "2025-05-23 10:02:21,913 - test_user_create - INFO - Creating user with data: {'name': 'Ironman', 'job': 'QA'}\n2025-05-23 10:02:22,307 - test_user_create - DEBUG - Response time: 0.39s\n2025-05-23 10:02:22,307 - test_user_create - DEBUG - Response JSON: {'name': 'Ironman', 'job': 'QA', 'id': '715', 'createdAt': '2025-05-23T17:02:22.255Z'}\n"}, "teardown": {"duration": 0.0003650188446044922, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data5]", "lineno": 8, "outcome": "passed", "keywords": ["data5", "pytestmark", "TestCreateUser", "parametrize", "tests", "()", "test_user_create.py", "test_create_user[data5]"], "setup": {"duration": 0.0005788803100585938, "outcome": "passed"}, "call": {"duration": 0.4185950756072998, "outcome": "passed", "stdout": "2025-05-23 10:02:22,311 - test_user_create - INFO - Creating user with data: {'name': 'alice in the wonderland', 'job': 'QA'}\n2025-05-23 10:02:22,729 - test_user_create - DEBUG - Response time: 0.42s\n2025-05-23 10:02:22,729 - test_user_create - DEBUG - Response JSON: {'name': 'alice in the wonderland', 'job': 'QA', 'id': '887', 'createdAt': '2025-05-23T17:02:22.676Z'}\n"}, "teardown": {"duration": 0.00037097930908203125, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data6]", "lineno": 8, "outcome": "passed", "keywords": ["data6", "pytestmark", "TestCreateUser", "parametrize", "tests", "()", "test_user_create.py", "test_create_user[data6]"], "setup": {"duration": 0.0005698204040527344, "outcome": "passed"}, "call": {"duration": 0.4093339443206787, "outcome": "passed", "stdout": "2025-05-23 10:02:22,732 - test_user_create - INFO - Creating user with data: {'name': '123456789012345678901234567890', 'job': 'QA'}\n2025-05-23 10:02:23,141 - test_user_create - DEBUG - Response time: 0.41s\n2025-05-23 10:02:23,141 - test_user_create - DEBUG - Response JSON: {'name': '123456789012345678901234567890', 'job': 'QA', 'id': '370', 'createdAt': '2025-05-23T17:02:23.091Z'}\n"}, "teardown": {"duration": 0.0003657341003417969, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user[data7]", "lineno": 8, "outcome": "passed", "keywords": ["test_create_user[data7]", "pytestmark", "TestCreateUser", "data7", "parametrize", "tests", "()", "test_user_create.py"], "setup": {"duration": 0.0005600452423095703, "outcome": "passed"}, "call": {"duration": 0.4088470935821533, "outcome": "passed", "stdout": "2025-05-23 10:02:23,145 - test_user_create - INFO - Creating user with data: {'name': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', 'job': 'QA'}\n2025-05-23 10:02:23,553 - test_user_create - DEBUG - Response time: 0.41s\n2025-05-23 10:02:23,553 - test_user_create - DEBUG - Response JSON: {'name': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', 'job': 'QA', 'id': '607', 'createdAt': '2025-05-23T17:02:23.501Z'}\n"}, "teardown": {"duration": 0.0003409385681152344, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user_empty_data", "lineno": 37, "outcome": "passed", "keywords": ["pytestmark", "test_create_user_empty_data", "negative", "TestCreateUser", "tests", "()", "test_user_create.py"], "setup": {"duration": 0.0004930496215820312, "outcome": "passed"}, "call": {"duration": 0.3646242618560791, "outcome": "passed", "stdout": "2025-05-23 10:02:23,556 - test_user_create - INFO - Creating user with data: {}\n2025-05-23 10:02:23,921 - test_user_create - DEBUG - Response code: 201\n"}, "teardown": {"duration": 0.0003619194030761719, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user_missing_job", "lineno": 59, "outcome": "passed", "keywords": ["pytestmark", "negative", "TestCreateUser", "test_create_user_missing_job", "tests", "()", "test_user_create.py"], "setup": {"duration": 0.00048828125, "outcome": "passed"}, "call": {"duration": 0.40813612937927246, "outcome": "passed", "stdout": "2025-05-23 10:02:23,924 - test_user_create - INFO - Creating user with data: {'name': 'abc'}\n2025-05-23 10:02:24,332 - test_user_create - DEBUG - Response code: 201\n"}, "teardown": {"duration": 0.000331878662109375, "outcome": "passed"}}, {"nodeid": "test_user_create.py::TestCreateUser::test_create_user_extra_field", "lineno": 69, "outcome": "passed", "keywords": ["test_create_user_extra_field", "pytestmark", "negative", "TestCreateUser", "tests", "()", "test_user_create.py"], "setup": {"duration": 0.00047779083251953125, "outcome": "passed"}, "call": {"duration": 0.4757838249206543, "outcome": "passed", "stdout": "2025-05-23 10:02:24,335 - test_user_create - INFO - Creating user with data: {'name': 'abc', 'job': 'recruiter', 'extra_field': 'extra'}\n2025-05-23 10:02:24,811 - test_user_create - DEBUG - Response code: 201\n"}, "teardown": {"duration": 0.0003509521484375, "outcome": "passed"}}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user[1]", "lineno": 7, "outcome": "passed", "keywords": ["test_user_delete.py", "pytestmark", "parametrize", "tests", "1", "()", "test_delete_user[1]", "TestDeleteUser"], "setup": {"duration": 0.0005609989166259766, "outcome": "passed"}, "call": {"duration": 0.5675210952758789, "outcome": "passed", "stdout": "2025-05-23 10:02:24,814 - test_user_delete - INFO - Deleting user with user_id: 1\n2025-05-23 10:02:25,221 - test_user_delete - INFO - Getting user with user_id: 1\n2025-05-23 10:02:25,381 - test_user_delete - DEBUG - Response code: 200\n"}, "teardown": {"duration": 0.00028014183044433594, "outcome": "passed"}}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user[2]", "lineno": 7, "outcome": "passed", "keywords": ["test_user_delete.py", "pytestmark", "2", "parametrize", "tests", "()", "test_delete_user[2]", "TestDeleteUser"], "setup": {"duration": 0.0005559921264648438, "outcome": "passed"}, "call": {"duration": 0.8355069160461426, "outcome": "passed", "stdout": "2025-05-23 10:02:25,384 - test_user_delete - INFO - Deleting user with user_id: 2\n2025-05-23 10:02:25,794 - test_user_delete - INFO - Getting user with user_id: 2\n2025-05-23 10:02:26,219 - test_user_delete - DEBUG - Response code: 200\n"}, "teardown": {"duration": 0.00036787986755371094, "outcome": "passed"}}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user[3]", "lineno": 7, "outcome": "passed", "keywords": ["test_user_delete.py", "pytestmark", "parametrize", "tests", "()", "3", "TestDeleteUser", "test_delete_user[3]"], "setup": {"duration": 0.0005681514739990234, "outcome": "passed"}, "call": {"duration": 0.95796799659729, "outcome": "passed", "stdout": "2025-05-23 10:02:26,223 - test_user_delete - INFO - Deleting user with user_id: 3\n2025-05-23 10:02:26,711 - test_user_delete - INFO - Getting user with user_id: 3\n2025-05-23 10:02:27,180 - test_user_delete - DEBUG - Response code: 200\n"}, "teardown": {"duration": 0.0002880096435546875, "outcome": "passed"}}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_nonexistent_user", "lineno": 19, "outcome": "passed", "keywords": ["test_user_delete.py", "test_delete_nonexistent_user", "tests", "()", "TestDeleteUser"], "setup": {"duration": 0.0004820823669433594, "outcome": "passed"}, "call": {"duration": 0.4501078128814697, "outcome": "passed", "stdout": "2025-05-23 10:02:27,184 - test_user_delete - INFO - Deleting user does not exist\n2025-05-23 10:02:27,633 - test_user_delete - DEBUG - Response code: 204\n"}, "teardown": {"duration": 0.0003287792205810547, "outcome": "passed"}}, {"nodeid": "test_user_delete.py::TestDeleteUser::test_delete_user_twice", "lineno": 25, "outcome": "passed", "keywords": ["test_delete_user_twice", "test_user_delete.py", "tests", "()", "TestDeleteUser"], "setup": {"duration": 0.0005271434783935547, "outcome": "passed"}, "call": {"duration": 1.5320041179656982, "outcome": "passed", "stdout": "2025-05-23 10:02:27,637 - test_user_delete - INFO - Deleting user twice\n2025-05-23 10:02:28,144 - test_user_delete - DEBUG - First Response code: 204\n2025-05-23 10:02:28,144 - test_user_delete - INFO - Getting user with user_id: 2\n2025-05-23 10:02:28,657 - test_user_delete - DEBUG - Response code: 200\n2025-05-23 10:02:28,657 - test_user_delete - INFO - Deleting user with user_id: 2 again\n2025-05-23 10:02:29,168 - test_user_delete - DEBUG - Second Response code: 204\n"}, "teardown": {"duration": 0.00040602684020996094, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users[1]", "lineno": 7, "outcome": "passed", "keywords": ["TestGetUser", "pytestmark", "test_get_users[1]", "parametrize", "tests", "1", "()", "test_user_get.py"], "setup": {"duration": 0.0006549358367919922, "outcome": "passed"}, "call": {"duration": 0.5099902153015137, "outcome": "passed", "stdout": "2025-05-23 10:02:29,172 - test_user_get - INFO - Getting users with page: 1\n2025-05-23 10:02:29,682 - test_user_get - DEBUG - Response JSON: {'page': 1, 'per_page': 6, 'total': 12, 'total_pages': 2, 'data': [{'id': 1, 'email': 'george.bluth@reqres.in', 'first_name': 'George', 'last_name': 'Bluth', 'avatar': 'https://reqres.in/img/faces/1-image.jpg'}, {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, {'id': 3, 'email': 'emma.wong@reqres.in', 'first_name': 'Emma', 'last_name': 'Wong', 'avatar': 'https://reqres.in/img/faces/3-image.jpg'}, {'id': 4, 'email': 'eve.holt@reqres.in', 'first_name': 'Eve', 'last_name': 'Holt', 'avatar': 'https://reqres.in/img/faces/4-image.jpg'}, {'id': 5, 'email': 'charles.morris@reqres.in', 'first_name': 'Charles', 'last_name': 'Morris', 'avatar': 'https://reqres.in/img/faces/5-image.jpg'}, {'id': 6, 'email': 'tracey.ramos@reqres.in', 'first_name': 'Tracey', 'last_name': 'Ramos', 'avatar': 'https://reqres.in/img/faces/6-image.jpg'}], 'support': {'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral', 'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.'}}\n"}, "teardown": {"duration": 0.00032901763916015625, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users[2]", "lineno": 7, "outcome": "passed", "keywords": ["TestGetUser", "pytestmark", "2", "test_get_users[2]", "parametrize", "tests", "()", "test_user_get.py"], "setup": {"duration": 0.000614166259765625, "outcome": "passed"}, "call": {"duration": 0.5086889266967773, "outcome": "passed", "stdout": "2025-05-23 10:02:29,685 - test_user_get - INFO - Getting users with page: 2\n2025-05-23 10:02:30,194 - test_user_get - DEBUG - Response JSON: {'page': 2, 'per_page': 6, 'total': 12, 'total_pages': 2, 'data': [{'id': 7, 'email': 'michael.lawson@reqres.in', 'first_name': 'Michael', 'last_name': 'Lawson', 'avatar': 'https://reqres.in/img/faces/7-image.jpg'}, {'id': 8, 'email': 'lindsay.ferguson@reqres.in', 'first_name': 'Lindsay', 'last_name': 'Ferguson', 'avatar': 'https://reqres.in/img/faces/8-image.jpg'}, {'id': 9, 'email': 'tobias.funke@reqres.in', 'first_name': 'Tobias', 'last_name': 'Funke', 'avatar': 'https://reqres.in/img/faces/9-image.jpg'}, {'id': 10, 'email': 'byron.fields@reqres.in', 'first_name': 'Byron', 'last_name': 'Fields', 'avatar': 'https://reqres.in/img/faces/10-image.jpg'}, {'id': 11, 'email': 'george.edwards@reqres.in', 'first_name': 'George', 'last_name': 'Edwards', 'avatar': 'https://reqres.in/img/faces/11-image.jpg'}, {'id': 12, 'email': 'rachel.howell@reqres.in', 'first_name': 'Rachel', 'last_name': 'Howell', 'avatar': 'https://reqres.in/img/faces/12-image.jpg'}], 'support': {'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral', 'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.'}}\n"}, "teardown": {"duration": 0.0002963542938232422, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users_not_exist_page[3]", "lineno": 23, "outcome": "passed", "keywords": ["tests", "3", "test_get_users_not_exist_page[3]", "TestGetUser", "pytestmark", "negative", "parametrize", "()", "test_user_get.py"], "setup": {"duration": 0.0005700588226318359, "outcome": "passed"}, "call": {"duration": 0.43007922172546387, "outcome": "passed", "stdout": "2025-05-23 10:02:30,197 - test_user_get - INFO - Getting users with non exist page: 3\n"}, "teardown": {"duration": 0.00029206275939941406, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_users_not_exist_page[100]", "lineno": 23, "outcome": "passed", "keywords": ["tests", "test_get_users_not_exist_page[100]", "TestGetUser", "pytestmark", "negative", "parametrize", "()", "100", "test_user_get.py"], "setup": {"duration": 0.0006089210510253906, "outcome": "passed"}, "call": {"duration": 0.48543286323547363, "outcome": "passed", "stdout": "2025-05-23 10:02:30,630 - test_user_get - INFO - Getting users with non exist page: 100\n"}, "teardown": {"duration": 0.0003600120544433594, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_single_user[1]", "lineno": 31, "outcome": "passed", "keywords": ["TestGetUser", "test_get_single_user[1]", "pytestmark", "parametrize", "tests", "1", "()", "test_user_get.py"], "setup": {"duration": 0.0005609989166259766, "outcome": "passed"}, "call": {"duration": 0.5093801021575928, "outcome": "passed", "stdout": "2025-05-23 10:02:31,118 - test_user_get - INFO - Getting single user with user_id: 1\n2025-05-23 10:02:31,627 - test_user_get - DEBUG - Response JSON: {'data': {'id': 1, 'email': 'george.bluth@reqres.in', 'first_name': 'George', 'last_name': 'Bluth', 'avatar': 'https://reqres.in/img/faces/1-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral', 'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.'}}\n"}, "teardown": {"duration": 0.0003609657287597656, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_single_user[2]", "lineno": 31, "outcome": "passed", "keywords": ["TestGetUser", "pytestmark", "2", "parametrize", "tests", "()", "test_get_single_user[2]", "test_user_get.py"], "setup": {"duration": 0.0005571842193603516, "outcome": "passed"}, "call": {"duration": 0.1716618537902832, "outcome": "passed", "stdout": "2025-05-23 10:02:31,631 - test_user_get - INFO - Getting single user with user_id: 2\n2025-05-23 10:02:31,802 - test_user_get - DEBUG - Response JSON: {'data': {'id': 2, 'email': 'janet.weaver@reqres.in', 'first_name': 'Janet', 'last_name': 'Weaver', 'avatar': 'https://reqres.in/img/faces/2-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral', 'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.'}}\n"}, "teardown": {"duration": 0.0002949237823486328, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_single_user[3]", "lineno": 31, "outcome": "passed", "keywords": ["TestGetUser", "test_get_single_user[3]", "pytestmark", "parametrize", "tests", "()", "3", "test_user_get.py"], "setup": {"duration": 0.0005691051483154297, "outcome": "passed"}, "call": {"duration": 0.18081879615783691, "outcome": "passed", "stdout": "2025-05-23 10:02:31,805 - test_user_get - INFO - Getting single user with user_id: 3\n2025-05-23 10:02:31,986 - test_user_get - DEBUG - Response JSON: {'data': {'id': 3, 'email': 'emma.wong@reqres.in', 'first_name': 'Emma', 'last_name': 'Wong', 'avatar': 'https://reqres.in/img/faces/3-image.jpg'}, 'support': {'url': 'https://contentcaddy.io?utm_source=reqres&utm_medium=json&utm_campaign=referral', 'text': 'Tired of writing endless social media content? Let Content Caddy generate it for you.'}}\n"}, "teardown": {"duration": 0.000286102294921875, "outcome": "passed"}}, {"nodeid": "test_user_get.py::TestGetUser::test_get_user_not_found", "lineno": 50, "outcome": "passed", "keywords": ["test_get_user_not_found", "TestGetUser", "pytestmark", "negative", "tests", "()", "test_user_get.py"], "setup": {"duration": 0.00048089027404785156, "outcome": "passed"}, "call": {"duration": 0.45630311965942383, "outcome": "passed", "stdout": "2025-05-23 10:02:31,989 - test_user_get - INFO - Getting user does not exist\n"}, "teardown": {"duration": 0.00037097930908203125, "outcome": "passed"}}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_user[data0]", "lineno": 7, "outcome": "passed", "keywords": ["test_user_update.py", "test_update_user[data0]", "TestUpdateUser", "data0", "pytestmark", "parametrize", "tests", "()"], "setup": {"duration": 0.0005738735198974609, "outcome": "passed"}, "call": {"duration": 0.5107870101928711, "outcome": "passed", "stdout": "2025-05-23 10:02:32,448 - test_user_update - INFO - Updating user with: {'user_id': 1, 'name': 'John Davis', 'job': 'Software Engineer'}\n2025-05-23 10:02:32,959 - test_user_update - DEBUG - Response JSON: {'name': 'John Davis', 'job': 'Software Engineer', 'updatedAt': '2025-05-23T17:02:32.810Z'}\n"}, "teardown": {"duration": 0.0002911090850830078, "outcome": "passed"}}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_user[data1]", "lineno": 7, "outcome": "passed", "keywords": ["test_user_update.py", "TestUpdateUser", "pytestmark", "data1", "parametrize", "tests", "()", "test_update_user[data1]"], "setup": {"duration": 0.0005970001220703125, "outcome": "passed"}, "call": {"duration": 0.5076229572296143, "outcome": "passed", "stdout": "2025-05-23 10:02:32,962 - test_user_update - INFO - Updating user with: {'user_id': 2, 'name': 'Jane Woo', 'job': 'Manager'}\n2025-05-23 10:02:33,469 - test_user_update - DEBUG - Response JSON: {'name': 'Jane Woo', 'job': 'Manager', 'updatedAt': '2025-05-23T17:02:33.330Z'}\n"}, "teardown": {"duration": 0.0003190040588378906, "outcome": "passed"}}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_user[data2]", "lineno": 7, "outcome": "passed", "keywords": ["test_user_update.py", "data2", "TestUpdateUser", "pytestmark", "test_update_user[data2]", "parametrize", "tests", "()"], "setup": {"duration": 0.0005600452423095703, "outcome": "passed"}, "call": {"duration": 0.5089030265808105, "outcome": "passed", "stdout": "2025-05-23 10:02:33,473 - test_user_update - INFO - Updating user with: {'user_id': 3, 'name': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', 'job': 'QA'}\n2025-05-23 10:02:33,981 - test_user_update - DEBUG - Response JSON: {'name': 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', 'job': 'QA', 'updatedAt': '2025-05-23T17:02:33.878Z'}\n"}, "teardown": {"duration": 0.0003571510314941406, "outcome": "passed"}}, {"nodeid": "test_user_update.py::TestUpdateUser::test_update_nonexistent_user", "lineno": 29, "outcome": "passed", "keywords": ["test_user_update.py", "TestUpdateUser", "tests", "()", "test_update_nonexistent_user"], "setup": {"duration": 0.00048089027404785156, "outcome": "passed"}, "call": {"duration": 0.508718729019165, "outcome": "passed", "stdout": "2025-05-23 10:02:33,985 - test_user_update - INFO - Updating user does not exist\n"}, "teardown": {"duration": 0.003094911575317383, "outcome": "passed"}}]}